@page "/R_Horarios"
@page "/R_Horarios/{HorarioId:int}"
@inject IHorarioRepositorio HorarioRepo;
<EditForm Model="horario" OnValidSubmit="Guardar">
    <div class="mb-3">
        <label>Id</label>
        <InputNumber @bind-Value="horario.HorarioId" class="form-control" />
    </div>
    <div>
        <button type="button"
                class="btn btn-primary input-group-text oi oi-magnifying-glass"
        @onclick="Buscar">
            Buscar
        </button>
    </div>
    <div class="mb-3">
        <label>Día</label>
        <InputSelect @bind-Value="horario.Dia" class="form-select text-14">
            @foreach (var dia in DiasSemana)
            {
                <option value="@dia">@dia</option>
            }
        </InputSelect>
    </div>
    <div class="mb-3">
        <label>Hora Inicio</label>
        <InputText @bind-Value="horario.HoraInicio" class="form-control" />
    </div>
    <div class="mb-3">
        <label>Hora Fin</label>
        <InputText @bind-Value="horario.HoraFin" class="form-control" />
    </div>

    <button type="submit" class="btn btn-primary">Guardar</button>
    <button class="btn btn-danger" @onclick="Eliminar">Borrar</button>
</EditForm>
@if (eliminado)
{
    <p>El horario ha sido eliminado con éxito.</p>
}

@code {
    [Parameter]
    public int HorarioId { get; set; }
    private bool eliminado = false;
    List<string> DiasSemana = new List<string> { "Lunes", "Martes", "Miércoles", "Jueves", "Viernes", "Sábado" };
    private Horario horario = new Horario();
    protected override async Task OnInitializedAsync()
    {
        if (HorarioId != 0) // Verifica si HorarioId se ha configurado
        {
            horario = await HorarioRepo.GetHorarioPorIdAsync(HorarioId);
        }
    }
    private async Task Guardar()
    {
        await HorarioRepo.CreateHorario(horario);
    }

    private async Task Buscar()
    {
        horario = await HorarioRepo.GetHorarioPorIdAsync(horario.HorarioId);
    }

    private async Task Eliminar()
    {

        if (horario != null)
        {
            eliminado = await HorarioRepo.DeleteHorario(horario.HorarioId);
            if (eliminado)
            {
                // Realizar alguna acción después de la eliminación exitosa
            }
        }
    }
}
