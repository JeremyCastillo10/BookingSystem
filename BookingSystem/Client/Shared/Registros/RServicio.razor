@page "/R_Servicios"
@page "/R_Servicios/{ServicioId:int}"
@inject IServicioRepositorio ServicioRepo;
<EditForm Model="servicio" OnSubmit="Guardar">
<div class="form-group row">

   <div class="border p-3 w-75" style="margin: 0 auto; width: 50%;">
        <h2 class="text-info pl-3">Registro Servicios</h2>
        <div class="row">
        <div class="container">

                    <label>Id</label>
                    <div class="mb-3 d-flex align-items-center">   
                        <div class="d-flex">
                            <InputNumber @bind-Value="servicio.ServicioId" class="form-control" />
                            <MudIconButton Icon="@Icons.Material.Filled.Search" aria-label="Buscar" OnClick="Buscar" class="ml-2" />
                        </div>
                    </div>

                    <div class="mb-3">
                        <label>Nombre</label>
                        <InputText @bind-Value="servicio.Nombre" class="form-control" />
                        <ValidationMessage For="@(() => servicio.Nombre)" />
                    </div>

                    <div class="mb-3">
                        <label>Descripcion</label>
                        <InputText @bind-Value="servicio.Descripcion" class="form-control" />
                        <ValidationMessage For="@(() => servicio.Descripcion)" />
                    </div>

                    <div class="mb-3">
                        <label>Duracion</label>
                        <InputText @bind-Value="servicio.Duracion" class="form-control" />
                        <ValidationMessage For="@(() => servicio.Duracion)" />
                    </div>
                    <div class="mb-3">
                        <label>Precio</label>
                        <InputNumber @bind-Value="servicio.Precio" class="form-control" />
                        <ValidationMessage For="@(() => servicio.Precio)" />
                    </div>
      <MudIconButton Icon="@Icons.Material.Filled.Save" aria-label="Guardar" ButtonType="ButtonType.Submit"></MudIconButton>
      <MudIconButton Icon="@Icons.Material.Filled.Delete" aria-label="delete" OnClick="Eliminar"></MudIconButton>
      
    </div>
   </div>
   </div>
   </div>
</EditForm>
@if (eliminado)
{
    <p>El servicio ha sido eliminado con éxito.</p>
}

@code {
    [Parameter]
    public int ServicioId { get; set; }
    private bool eliminado = false;
    private Servicio servicio = new Servicio();
    protected override async Task OnInitializedAsync()
    {
        if (ServicioId != 0)
        {
            servicio = await ServicioRepo.GetServicioPorIdAsync(ServicioId);
        }
    }
    private async Task Guardar()
    {
        await ServicioRepo.CreateServicio(servicio);
        Nuevo();
    }

    private async Task Buscar()
    {
        servicio = await ServicioRepo.GetServicioPorIdAsync(servicio.ServicioId);
    }

    private async Task Eliminar()
    {

        if (servicio!= null)
        {
            eliminado = await ServicioRepo.DeleteServicio(servicio.ServicioId);
            if (eliminado)
            {
                Nuevo();
            }
        }
    }
    public void Nuevo()
    {
        servicio = new Servicio();
    }
    
}
